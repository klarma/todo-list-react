{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","newTaskContentTrimed","trim","length","value","onChange","target","placeholder","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f796e9b7.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const newTaskContentTrimed = newTaskContent.trim();\r\n\r\n        if (newTaskContentTrimed.length) {\r\n            addNewTask(newTaskContentTrimed);\r\n        };\r\n\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <input\r\n                value={newTaskContent}\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n                className=\"form__input\"\r\n                placeholder=\"Co jest do zrobienia?\"\r\n            />\r\n            <button className=\"form__button\">Dodaj zadanie</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <ul className=\"tasks\">\r\n        {\r\n            tasks.map(task => (\r\n                <li\r\n                    key={task.id}\r\n                    className={`tasks__item${task.done && hideDone\r\n                        ? \" tasks__item--hide\"\r\n                        : \"\"}`\r\n                    }\r\n                >\r\n                    <button\r\n                        className=\"tasks__button tasks__button--done\"\r\n                        onClick={() => toggleTaskDone(task.id)}\r\n                    >\r\n                        {task.done\r\n                            ? <i className='fas fa-check'></i>\r\n                            : \"\"}\r\n                    </button>\r\n                    <span\r\n                        className={\r\n                            `tasks__spanTask${task.done\r\n                                ? \" tasks__spanTask--done\"\r\n                                : \"\"}`\r\n                        }\r\n                    >\r\n                        {task.id} - {task.content}\r\n                    </span>\r\n                    <button\r\n                        className=\"tasks__button\"\r\n                        onClick={() => removeTask(task.id)}\r\n                    >\r\n                        <i className=\"fas fa-trash-alt\"></i>\r\n                    </button>\r\n                </li>\r\n            ))\r\n        }\r\n    </ul>\r\n)\r\n\r\nexport default Tasks;","import \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <div className=\"buttons\">\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <button onClick={toggleHideDone} className=\"buttons__button\">\r\n                    {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n                </button>\r\n                <button\r\n                    className=\"buttons__button\"\r\n                    onClick={setAllDone}\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    Ukończ wszystkie\r\n                </button>\r\n            </>\r\n        )}\r\n    </div>\r\n);\r\n\r\nexport default Buttons;","import \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <section className=\"section\">\r\n    <h2 className=\"section__header\">\r\n      {title}\r\n      {extraHeaderContent}\r\n    </h2>\r\n    {body}\r\n  </section>\r\n);\r\n\r\nexport default Section;","import \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n    <header className=\"header\">\r\n        <h1>{title}</h1>\r\n    </header>\r\n)\r\n\r\nexport default Header;","const Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import { useState } from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  \n  const [tasks, setTasks] = useState([\n    { id: 1, content: \"przejść na Reacta\", done: false },\n    { id: 2, content: \"zjeść obiad\", done: true },\n  ]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone)\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      };\n\n      return task;\n    }))\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true,\n    })));\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ]);\n  };\n\n  return (\n    <>\n      <Header\n        title=\"Lista zadań\"\n      />\n      <Container>\n        <Section\n          title=\"Dodaj nowe zadanie\"\n          body={\n            <Form addNewTask={addNewTask} />\n          }\n        />\n        <Section\n          title=\"Lista zadań\"\n          body={\n            <Tasks\n              tasks={tasks}\n              hideDone={hideDone}\n              removeTask={removeTask}\n              toggleTaskDone={toggleTaskDone}\n            />\n          }\n          extraHeaderContent={\n            <Buttons\n              tasks={tasks}\n              hideDone={hideDone}\n              toggleHideDone={toggleHideDone}\n              setAllDone={setAllDone}\n            />\n          }\n        />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}